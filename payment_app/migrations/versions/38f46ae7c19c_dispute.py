"""dispute

Revision ID: 38f46ae7c19c
Revises: f76e23884123
Create Date: 2023-01-23 12:35:56.487505

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision = '38f46ae7c19c'
down_revision = 'f76e23884123'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dispute_evidence',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=True),
    sa.Column('summary', sa.TEXT(), nullable=True),
    sa.Column('shipping_proof', sa.JSON(), nullable=True),
    sa.Column('billing_proof', sa.JSON(), nullable=True),
    sa.Column('cancellation_proof', sa.JSON(), nullable=True),
    sa.Column('customer_communication', sa.JSON(), nullable=True),
    sa.Column('proof_of_service', sa.JSON(), nullable=True),
    sa.Column('explanation_letter', sa.JSON(), nullable=True),
    sa.Column('refund_confirmation', sa.JSON(), nullable=True),
    sa.Column('access_activity_log', sa.JSON(), nullable=True),
    sa.Column('refund_cancellation_policy', sa.JSON(), nullable=True),
    sa.Column('term_and_conditions', sa.JSON(), nullable=True),
    sa.Column('others', sa.JSON(), nullable=True),
    sa.Column('submitted_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dispute_document',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('dispute_evidence_id', sa.Integer(), nullable=True),
    sa.Column('rzp_created_at', sa.DateTime(), nullable=False),
    sa.Column('display_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('entity', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('document_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('mime_type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('size', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('url', sa.TEXT(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True),
    sa.ForeignKeyConstraint(['dispute_evidence_id'], ['dispute_evidence.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('disputes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('dispute_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('comments', sa.TEXT(), nullable=True),
    sa.Column('respond_by', sa.TIMESTAMP(), nullable=True),
    sa.Column('driver_created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('entity', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('payment_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('currency', sqlmodel.sql.sqltypes.AutoString(length=3), nullable=False),
    sa.Column('gateway_dispute_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('amount_deducted', sa.Integer(), nullable=False),
    sa.Column('reason_code', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('phase', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('driver_id', sa.Integer(), nullable=False),
    sa.Column('dispute_evidence_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True),
    sa.ForeignKeyConstraint(['dispute_evidence_id'], ['dispute_evidence.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('dispute_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('disputes')
    op.drop_table('dispute_document')
    op.drop_table('dispute_evidence')
    # ### end Alembic commands ###

